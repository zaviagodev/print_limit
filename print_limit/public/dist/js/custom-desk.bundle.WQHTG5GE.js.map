{
  "version": 3,
  "sources": ["../../../../../apps/print_limit/print_limit/public/js/frappe/form/toolbar.js"],
  "sourcesContent": ["// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.form.Toolbar = class CustomToolbar {\n    constructor(opts) {\n        $.extend(this, opts);\n        this.refresh();\n        this.add_update_button_on_dirty();\n        this.setup_editable_title();\n    }\n    async refresh() {\n        if (!(\n            window.location.pathname.startsWith(\"/app/data-import\")\n            || window.location.pathname.startsWith(\"/app/data-export\")\n            || window.location.pathname.startsWith(\"/app/customize-form\")\n        )) {\n            await this.has_print_attempts(this.frm.doctype, this.frm.docname);\n        }\n        this.make_menu();\n        this.make_viewers();\n        this.set_title();\n        this.page.clear_user_actions();\n        this.show_title_as_dirty();\n        this.set_primary_action();\n\n        if (this.frm.meta.hide_toolbar) {\n            this.page.hide_menu();\n        } else {\n            if (this.frm.doc.__islocal) {\n                this.page.hide_menu();\n                this.print_icon && this.print_icon.addClass(\"hide\");\n            } else {\n                this.page.show_menu();\n                this.print_icon && this.print_icon.removeClass(\"hide\");\n            }\n        }\n    }\n    set_title() {\n        if (this.frm.is_new()) {\n            var title = __(\"New {0}\", [__(this.frm.meta.name)]);\n        } else if (this.frm.meta.title_field) {\n            let title_field = (this.frm.doc[this.frm.meta.title_field] || \"\").toString().trim();\n            var title = strip_html(title_field || this.frm.docname);\n            if (\n                this.frm.doc.__islocal ||\n                title === this.frm.docname ||\n                this.frm.meta.autoname === \"hash\"\n            ) {\n                this.page.set_title_sub(\"\");\n            } else {\n                this.page.set_title_sub(this.frm.docname);\n                this.page.$sub_title_area.css(\"cursor\", \"copy\");\n                this.page.$sub_title_area.on(\"click\", (event) => {\n                    event.stopImmediatePropagation();\n                    frappe.utils.copy_to_clipboard(this.frm.docname);\n                });\n            }\n        } else {\n            var title = this.frm.docname;\n        }\n\n        var me = this;\n        title = __(title);\n        this.page.set_title(title);\n        if (this.frm.meta.title_field) {\n            frappe.utils.set_title(title + \" - \" + this.frm.docname);\n        }\n        this.page.$title_area.toggleClass(\n            \"editable-title\",\n            !!(this.is_title_editable() || this.can_rename())\n        );\n\n        this.set_indicator();\n    }\n    is_title_editable() {\n        let title_field = this.frm.meta.title_field;\n        let doc_field = this.frm.get_docfield(title_field);\n\n        if (\n            title_field &&\n            this.frm.perm[0].write &&\n            !this.frm.doc.__islocal &&\n            doc_field.fieldtype === \"Data\" &&\n            !doc_field.read_only\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    can_rename() {\n        return this.frm.perm[0].write && this.frm.meta.allow_rename && !this.frm.doc.__islocal;\n    }\n    show_unchanged_document_alert() {\n        frappe.show_alert({\n            indicator: \"info\",\n            message: __(\"Unchanged\"),\n        });\n    }\n    rename_document_title(input_name, input_title, merge = false) {\n        let confirm_message = null;\n        const docname = this.frm.doc.name;\n        const title_field = this.frm.meta.title_field || \"\";\n        const doctype = this.frm.doctype;\n\n        if (input_name) {\n            const warning = __(\"This cannot be undone\");\n            const message = __(\"Are you sure you want to merge {0} with {1}?\", [\n                docname.bold(),\n                input_name.bold(),\n            ]);\n            confirm_message = `${message}<br><b>${warning}<b>`;\n        }\n\n        let rename_document = () => {\n            return frappe\n                .xcall(\"frappe.model.rename_doc.update_document_title\", {\n                    doctype,\n                    docname,\n                    name: input_name,\n                    title: input_title,\n                    enqueue: true,\n                    merge,\n                    freeze: true,\n                    freeze_message: __(\"Updating related fields...\"),\n                })\n                .then((new_docname) => {\n                    const reload_form = (input_name) => {\n                        $(document).trigger(\"rename\", [doctype, docname, input_name]);\n                        if (locals[doctype] && locals[doctype][docname])\n                            delete locals[doctype][docname];\n                        this.frm.reload_doc();\n                    };\n\n                    // handle document renaming queued action\n                    if (input_name && new_docname == docname) {\n                        frappe.socketio.doc_subscribe(doctype, input_name);\n                        frappe.realtime.on(\"doc_update\", (data) => {\n                            if (data.doctype == doctype && data.name == input_name) {\n                                reload_form(input_name);\n                                frappe.show_alert({\n                                    message: __(\"Document renamed from {0} to {1}\", [\n                                        docname.bold(),\n                                        input_name.bold(),\n                                    ]),\n                                    indicator: \"success\",\n                                });\n                            }\n                        });\n                        frappe.show_alert(\n                            __(\"Document renaming from {0} to {1} has been queued\", [\n                                docname.bold(),\n                                input_name.bold(),\n                            ])\n                        );\n                    }\n\n                    // handle document sync rename action\n                    if (input_name && (new_docname || input_name) != docname) {\n                        reload_form(new_docname || input_name);\n                    }\n                });\n        };\n\n        return new Promise((resolve, reject) => {\n            if (input_title === this.frm.doc[title_field] && input_name === docname) {\n                this.show_unchanged_document_alert();\n                resolve();\n            } else if (merge) {\n                frappe.confirm(\n                    confirm_message,\n                    () => {\n                        rename_document().then(resolve).catch(reject);\n                    },\n                    reject\n                );\n            } else {\n                rename_document().then(resolve).catch(reject);\n            }\n        });\n    }\n    setup_editable_title() {\n        let me = this;\n\n        this.page.$title_area.find(\".title-text\").on(\"click\", () => {\n            let fields = [];\n            let docname = me.frm.doc.name;\n            let title_field = me.frm.meta.title_field || \"\";\n\n            // check if title is updatable\n            if (me.is_title_editable()) {\n                let title_field_label = me.frm.get_docfield(title_field).label;\n\n                fields.push({\n                    label: __(\"New {0}\", [__(title_field_label)]),\n                    fieldname: \"title\",\n                    fieldtype: \"Data\",\n                    reqd: 1,\n                    default: me.frm.doc[title_field],\n                });\n            }\n\n            // check if docname is updatable\n            if (me.can_rename()) {\n                let label = __(\"New Name\");\n                if (me.frm.meta.autoname && me.frm.meta.autoname.startsWith(\"field:\")) {\n                    let fieldname = me.frm.meta.autoname.split(\":\")[1];\n                    label = __(\"New {0}\", [me.frm.get_docfield(fieldname).label]);\n                }\n\n                fields.push(\n                    ...[\n                        {\n                            label: label,\n                            fieldname: \"name\",\n                            fieldtype: \"Data\",\n                            reqd: 1,\n                            default: docname,\n                        },\n                        {\n                            label: __(\"Merge with existing\"),\n                            fieldname: \"merge\",\n                            fieldtype: \"Check\",\n                            default: 0,\n                        },\n                    ]\n                );\n            }\n\n            // create dialog\n            if (fields.length > 0) {\n                let d = new frappe.ui.Dialog({\n                    title: __(\"Rename\"),\n                    fields: fields,\n                });\n                d.show();\n                d.set_primary_action(__(\"Rename\"), (values) => {\n                    d.disable_primary_action();\n                    d.hide();\n                    this.rename_document_title(values.name, values.title, values.merge)\n                        .then(() => {\n                            d.hide();\n                        })\n                        .catch(() => {\n                            d.enable_primary_action();\n                        });\n                });\n            }\n        });\n    }\n    get_dropdown_menu(label) {\n        return this.page.add_dropdown(label);\n    }\n    set_indicator() {\n        var indicator = frappe.get_indicator(this.frm.doc);\n        if (\n            this.frm.save_disabled &&\n            indicator &&\n            [__(\"Saved\"), __(\"Not Saved\")].includes(indicator[0])\n        ) {\n            return;\n        }\n        if (indicator) {\n            this.page.set_indicator(indicator[0], indicator[1]);\n        } else {\n            this.page.clear_indicator();\n        }\n    }\n    make_menu() {\n        this.page.clear_icons();\n        this.page.clear_menu();\n\n        if (frappe.boot.desk_settings.form_sidebar) {\n            this.make_navigation();\n            this.make_menu_items();\n        }\n    }\n\n    make_viewers() {\n        if (this.frm.viewers) {\n            return;\n        }\n        this.frm.viewers = new frappe.ui.form.FormViewers({\n            frm: this.frm,\n            parent: $('<div class=\"form-viewers d-flex\"></div>').prependTo(\n                this.frm.page.page_actions\n            ),\n        });\n    }\n\n    make_navigation() {\n        // Navigate\n        if (!this.frm.is_new() && !this.frm.meta.issingle) {\n            this.page.add_action_icon(\n                \"left\",\n                () => {\n                    this.frm.navigate_records(1);\n                },\n                \"prev-doc\",\n                __(\"Previous Document\")\n            );\n            this.page.add_action_icon(\n                \"right\",\n                () => {\n                    this.frm.navigate_records(0);\n                },\n                \"next-doc\",\n                __(\"Next Document\")\n            );\n        }\n    }\n\n    async has_print_attempts(doctype, docname) {\n        return frappe.call({\n            method: \"print_limit.has_print_attempts\",\n            args: {\n                doctype: doctype,\n                docname: docname\n            },\n        }).then((r) => {\n            this.print_attempts = r.message;\n        });\n    }\n\n    make_menu_items() {\n        // Print\n        const me = this;\n        const p = this.frm.perm[0];\n        const docstatus = cint(this.frm.doc.docstatus);\n        const is_submittable = frappe.model.is_submittable(this.frm.doc.doctype);\n\n        const print_settings = frappe.model.get_doc(\":Print Settings\", \"Print Settings\");\n        const allow_print_for_draft = cint(print_settings.allow_print_for_draft);\n        const allow_print_for_cancelled = cint(print_settings.allow_print_for_cancelled);\n\n        if (\n            !is_submittable ||\n            docstatus == 1 ||\n            (allow_print_for_cancelled && docstatus == 2) ||\n            (allow_print_for_draft && docstatus == 0)\n        ) {\n            if (frappe.model.can_print(null, me.frm) && !this.frm.meta.issingle) {\n                this.has_print_attempts(this.frm.doctype, this.frm.docname).then(() => {\n                    console.log(\"then print_attempts\", this.print_attempts);\n                });\n                console.log(\"print_attempts\", this.print_attempts);\n                if (this.print_attempts) {\n                    this.page.add_menu_item(\n                        __(\"Print\"),\n                        function () {\n                            me.frm.print_doc();\n                        },\n                        true\n                    );\n                    this.print_icon = this.page.add_action_icon(\n                        \"printer\",\n                        function () {\n                            me.frm.print_doc();\n                        },\n                        \"\",\n                        __(\"Print\")\n                    );\n\n                }\n            }\n        }\n\n        // email\n        if (frappe.model.can_email(null, me.frm) && me.frm.doc.docstatus < 2) {\n            this.page.add_menu_item(\n                __(\"Email\"),\n                function () {\n                    me.frm.email_doc();\n                },\n                true,\n                {\n                    shortcut: \"Ctrl+E\",\n                    condition: () => !this.frm.is_new(),\n                }\n            );\n        }\n\n        // go to field modal\n        this.page.add_menu_item(\n            __(\"Jump to field\"),\n            function () {\n                me.show_jump_to_field_dialog();\n            },\n            true,\n            \"Ctrl+J\"\n        );\n\n        // Linked With\n        if (!me.frm.meta.issingle) {\n            this.page.add_menu_item(\n                __(\"Links\"),\n                function () {\n                    me.show_linked_with();\n                },\n                true\n            );\n        }\n\n        // duplicate\n        if (in_list(frappe.boot.user.can_create, me.frm.doctype) && !me.frm.meta.allow_copy) {\n            this.page.add_menu_item(\n                __(\"Duplicate\"),\n                function () {\n                    me.frm.copy_doc();\n                },\n                true\n            );\n        }\n\n        // copy doc to clipboard\n        this.page.add_menu_item(\n            __(\"Copy to Clipboard\"),\n            function () {\n                frappe.utils.copy_to_clipboard(JSON.stringify(me.frm.doc));\n            },\n            true\n        );\n\n        // rename\n        if (this.can_rename()) {\n            this.page.add_menu_item(\n                __(\"Rename\"),\n                function () {\n                    me.frm.rename_doc();\n                },\n                true\n            );\n        }\n\n        // reload\n        this.page.add_menu_item(\n            __(\"Reload\"),\n            function () {\n                me.frm.reload_doc();\n            },\n            true\n        );\n\n        // delete\n        if (\n            cint(me.frm.doc.docstatus) != 1 &&\n            !me.frm.doc.__islocal &&\n            frappe.model.can_delete(me.frm.doctype)\n        ) {\n            this.page.add_menu_item(\n                __(\"Delete\"),\n                function () {\n                    me.frm.savetrash();\n                },\n                true,\n                {\n                    shortcut: \"Shift+Ctrl+D\",\n                    condition: () => !this.frm.is_new(),\n                }\n            );\n        }\n\n        this.make_customize_buttons();\n\n        // Auto Repeat\n        if (this.can_repeat()) {\n            this.page.add_menu_item(\n                __(\"Repeat\"),\n                function () {\n                    frappe.utils.new_auto_repeat_prompt(me.frm);\n                },\n                true\n            );\n        }\n\n        // New\n        if (p[CREATE] && !this.frm.meta.issingle && !this.frm.meta.in_create) {\n            this.page.add_menu_item(\n                __(\"New {0}\", [__(me.frm.doctype)]),\n                function () {\n                    frappe.new_doc(me.frm.doctype, true);\n                },\n                true,\n                {\n                    shortcut: \"Ctrl+B\",\n                    condition: () => !this.frm.is_new(),\n                }\n            );\n        }\n    }\n\n    make_customize_buttons() {\n        let is_doctype_form = this.frm.doctype === \"DocType\";\n        if (\n            frappe.model.can_create(\"Custom Field\") &&\n            frappe.model.can_create(\"Property Setter\")\n        ) {\n            let doctype = is_doctype_form ? this.frm.docname : this.frm.doctype;\n            let is_doctype_custom = is_doctype_form ? this.frm.doc.custom : false;\n\n            if (doctype != \"DocType\" && !is_doctype_custom && this.frm.meta.issingle === 0) {\n                this.page.add_menu_item(\n                    __(\"Customize\"),\n                    () => {\n                        if (this.frm.meta && this.frm.meta.custom) {\n                            frappe.set_route(\"Form\", \"DocType\", doctype);\n                        } else {\n                            frappe.set_route(\"Form\", \"Customize Form\", {\n                                doc_type: doctype,\n                            });\n                        }\n                    },\n                    true\n                );\n            }\n        }\n\n        if (frappe.model.can_create(\"DocType\")) {\n            if (frappe.boot.developer_mode === 1 && !is_doctype_form) {\n                // edit doctype\n                this.page.add_menu_item(\n                    __(\"Edit DocType\"),\n                    () => {\n                        frappe.set_route(\"Form\", \"DocType\", this.frm.doctype);\n                    },\n                    true\n                );\n            }\n        }\n    }\n\n    can_repeat() {\n        return this.frm.meta.allow_auto_repeat && !this.frm.is_new() && !this.frm.doc.auto_repeat;\n    }\n    can_save() {\n        return this.get_docstatus() === 0;\n    }\n    can_submit() {\n        return (\n            this.get_docstatus() === 0 &&\n            !this.frm.doc.__islocal &&\n            !this.frm.doc.__unsaved &&\n            this.frm.perm[0].submit &&\n            !this.has_workflow()\n        );\n    }\n    can_update() {\n        return (\n            this.get_docstatus() === 1 &&\n            !this.frm.doc.__islocal &&\n            this.frm.perm[0].submit &&\n            this.frm.doc.__unsaved\n        );\n    }\n    can_cancel() {\n        return this.get_docstatus() === 1 && this.frm.perm[0].cancel && !this.read_only;\n    }\n    can_amend() {\n        return this.get_docstatus() === 2 && this.frm.perm[0].amend && !this.read_only;\n    }\n    has_workflow() {\n        if (this._has_workflow === undefined)\n            this._has_workflow = frappe.get_list(\"Workflow\", {\n                document_type: this.frm.doctype,\n            }).length;\n        return this._has_workflow;\n    }\n    get_docstatus() {\n        return cint(this.frm.doc.docstatus);\n    }\n    show_linked_with() {\n        if (!this.frm.linked_with) {\n            this.frm.linked_with = new frappe.ui.form.LinkedWith({\n                frm: this.frm,\n            });\n        }\n        this.frm.linked_with.show();\n    }\n    set_primary_action(dirty) {\n        if (!dirty) {\n            // don't clear actions menu if dirty\n            this.page.clear_user_actions();\n        }\n\n        var status = this.get_action_status();\n        if (status) {\n            // When moving from a page with status amend to another page with status amend\n            // We need to check if document is already amend specifically and hide\n            // or clear the menu actions accordingly\n\n            if (status !== this.current_status && status === \"Amend\") {\n                let doc = this.frm.doc;\n                frappe\n                    .xcall(\"frappe.client.is_document_amended\", {\n                        doctype: doc.doctype,\n                        docname: doc.name,\n                    })\n                    .then((is_amended) => {\n                        if (is_amended) {\n                            this.page.clear_actions();\n                            return;\n                        }\n                        this.set_page_actions(status);\n                    });\n            } else {\n                this.set_page_actions(status);\n            }\n        } else {\n            this.page.clear_actions();\n            this.current_status = null;\n        }\n    }\n    get_action_status() {\n        var status = null;\n        if (this.frm.page.current_view_name === \"print\" || this.frm.hidden) {\n            status = \"Edit\";\n        } else if (this.can_submit()) {\n            status = \"Submit\";\n        } else if (this.can_save()) {\n            if (!this.frm.save_disabled) {\n                //Show the save button if there is no workflow or if there is a workflow and there are changes\n                if (this.has_workflow() ? this.frm.doc.__unsaved : true) {\n                    status = \"Save\";\n                }\n            }\n        } else if (this.can_update()) {\n            status = \"Update\";\n        } else if (this.can_cancel()) {\n            status = \"Cancel\";\n        } else if (this.can_amend()) {\n            status = \"Amend\";\n        }\n        return status;\n    }\n    set_page_actions(status) {\n        var me = this;\n        this.page.clear_actions();\n\n        if (status !== \"Edit\") {\n            var perm_to_check = this.frm.action_perm_type_map[status];\n            if (!this.frm.perm[0][perm_to_check]) {\n                return;\n            }\n        }\n\n        if (status === \"Edit\") {\n            this.page.set_primary_action(\n                __(\"Edit\"),\n                function () {\n                    me.frm.page.set_view(\"main\");\n                },\n                \"edit\"\n            );\n        } else if (status === \"Cancel\") {\n            let add_cancel_button = () => {\n                this.page.set_secondary_action(__(status), function () {\n                    me.frm.savecancel(this);\n                });\n            };\n            if (this.has_workflow()) {\n                frappe\n                    .xcall(\"frappe.model.workflow.can_cancel_document\", {\n                        doctype: this.frm.doc.doctype,\n                    })\n                    .then((can_cancel) => {\n                        if (can_cancel) {\n                            add_cancel_button();\n                        }\n                    });\n            } else {\n                add_cancel_button();\n            }\n        } else {\n            var click = {\n                Save: function () {\n                    return me.frm.save(\"Save\", null, this);\n                },\n                Submit: function () {\n                    return me.frm.savesubmit(this);\n                },\n                Update: function () {\n                    return me.frm.save(\"Update\", null, this);\n                },\n                Amend: function () {\n                    return me.frm.amend_doc();\n                },\n            }[status];\n\n            var icon = {\n                Update: \"edit\",\n            }[status];\n\n            this.page.set_primary_action(__(status), click, icon);\n        }\n\n        this.current_status = status;\n    }\n    add_update_button_on_dirty() {\n        var me = this;\n        $(this.frm.wrapper).on(\"dirty\", function () {\n            me.show_title_as_dirty();\n\n            // clear workflow actions\n            me.frm.page.clear_actions_menu();\n\n            // enable save action\n            if (!me.frm.save_disabled) {\n                me.set_primary_action(true);\n            }\n        });\n    }\n    show_title_as_dirty() {\n        if (this.frm.save_disabled && !this.frm.set_dirty) return;\n\n        if (this.frm.is_dirty()) {\n            this.page.set_indicator(__(\"Not Saved\"), \"orange\");\n        }\n\n        $(this.frm.wrapper).attr(\"data-state\", this.frm.is_dirty() ? \"dirty\" : \"clean\");\n    }\n\n    show_jump_to_field_dialog() {\n        let visible_fields_filter = (f) =>\n            ![\"Section Break\", \"Column Break\", \"Tab Break\"].includes(f.df.fieldtype) &&\n            !f.df.hidden &&\n            f.disp_status !== \"None\";\n\n        let fields = this.frm.fields\n            .filter(visible_fields_filter)\n            .map((f) => ({ label: __(f.df.label), value: f.df.fieldname }));\n\n        let dialog = new frappe.ui.Dialog({\n            title: __(\"Jump to field\"),\n            fields: [\n                {\n                    fieldtype: \"Autocomplete\",\n                    fieldname: \"fieldname\",\n                    label: __(\"Select Field\"),\n                    options: fields,\n                    reqd: 1,\n                },\n            ],\n            primary_action_label: __(\"Go\"),\n            primary_action: ({ fieldname }) => {\n                dialog.hide();\n                this.frm.scroll_to_field(fieldname);\n            },\n            animate: false,\n        });\n\n        dialog.show();\n    }\n};\n"],
  "mappings": "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",
  "names": ["input_name"]
}
